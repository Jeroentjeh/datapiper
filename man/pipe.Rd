% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline.R
\name{pipe}
\alias{pipe}
\title{Creates a pipe object out of a function and a list of arguments}
\usage{
pipe(.function, ...)
}
\arguments{
\item{.function}{A function to repeat transformations from a trained pipeline on new data. Will be checked for being a function and taking a \code{data} argument.}

\item{...}{Other arguments to \code{.function}. Non-named arguments are only accepted if \code{.function} takes a \code{...} argument. Named arguments will be checked to
be in the argument list of \code{.function}.}
}
\value{
A pipe object with two entries:
\itemize{
\item \code{predict_function}: A function to repeat transformations from a trained pipeline on new data.
\item \code{args}: Arguments for \code{predict_function}
}
}
\description{
Creates a pipe object out of a function and a list of arguments
}
\details{
Both .function and all ... arguments are force evaluated upon calling this function. This should guarantee that when calling this function in a clean
environment, it will still be able to use the function and arguments. Any functions that function depends on will most likely not be included, so library dependencies
aren't taken into account here.
}
