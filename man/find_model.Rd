% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_finder.R
\name{find_model}
\alias{find_model}
\title{Find fitting models and test them using given metrics on the test dataset}
\usage{
find_model(train, test, response, models, metrics, parameter_sample_rate = 1,
  seed = 1, prepend_data_checker = T, on_missing_column = c("error",
  "add")[1], on_extra_column = c("remove", "error")[1],
  on_type_error = c("ignore", "error")[1], verbose = T, save_model = F,
  preprocess_pipes = list(function(train, test) return(list(train = train,
  test = train, .predict = function(data) return(data)))))
}
\arguments{
\item{train}{The training dataset}

\item{test}{The testing dataset}

\item{response}{The response column as a string}

\item{models}{A list of models. Each model should be a list, containing at least a training function \code{.train} and a \code{.predict} function, plus named
vectors of parameters to explore.

The \code{.train} function has to take a \code{data} argument that stores the training data and a \code{...} argument for the parameters.
The \code{.predict} function needs to take two arguments, where the first is the model and the second the new dataset.

If a parameter only takes a single value, you can use a vector to store options. Otherwise use a list.

You can use \code{\link{model_trainer}} as a wrapper for this list. It will also test your inputs.}

\item{metrics}{A list of metrics (functions) that need to be calculated on the train and test response and predictions}

\item{parameter_sample_rate}{Optional parameter. If set in the range \code{(0,1])}, it will be used to sample the possible combinations of parameters}

\item{seed}{Random seed to set each time before a model is trained}

\item{prepend_data_checker}{Flag indicating if \code{\link{pipeline_check}} should be prepended before all pipelines.}

\item{on_missing_column}{See \code{\link{pipeline_check}} for details.}

\item{on_extra_column}{See \code{\link{pipeline_check}} for details.}

\item{on_type_error}{See \code{\link{pipeline_check}} for details.}

\item{verbose}{Should intermediate updates be printed.}

\item{save_model}{Flag indicating if the generated models should be saved. Defaults to False.}

\item{preprocess_pipes}{List of preprocessing pipelines generated using \code{\link{pipeline}}.}
}
\value{
A dataframe containing the training function, a list of parameters used to train the function, and one column for each metric / dataset combination.
}
\description{
Find fitting models and test them using given metrics on the test dataset
}
